{"version":3,"file":"component---src-pages-index-js-13ec50ce4d7c6645b0d5.js","mappings":"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","sources":["webpack://ketchum/./src/styles/pokedex.js","webpack://ketchum/./src/components/Pokedex.js","webpack://ketchum/./src/components/BattleZone.js","webpack://ketchum/./src/styles/whosThatPokemon.js","webpack://ketchum/./src/components/utils.js","webpack://ketchum/./src/components/WhosThatPokemon.js","webpack://ketchum/./src/components/Novel.js","webpack://ketchum/./src/styles/index.js","webpack://ketchum/./src/pages/index.js"],"sourcesContent":["import styled from 'styled-components'\n\nexport const PokemonName = styled.h2`\n    margin: 0;\n`\n\nexport const StatsList = styled.ul`\n    list-style-type: none;\n    padding: 0;\n`\n\nexport const Stat = styled.li`\n    margin-bottom: 20px;\n`\n\nexport const StatTitle = styled.span`\n    font-family: 'Bungee', cursive; \n`","import React, { useState } from \"react\";\n\nimport { PokemonName, StatsList, Stat, StatTitle } from \"../styles/pokedex\";\n\nconst Pokedex = ({ allPokemon }) => {\n  const spriteNames = [\n    \"front_default\",\n    \"front_female\",\n    \"front_shiny\",\n    \"front_shiny_female\",\n  ];\n  const [currentMon, setCurrentMon] = useState(allPokemon[0]);\n\n  const StatCard = ({ pokemon }) => (\n    <article key={pokemon.id}>\n      <PokemonName>{pokemon.name}</PokemonName>\n      {spriteNames.map((sprite) =>\n        pokemon.sprites[`${sprite}`] ? (\n          <img\n            key={`${pokemon.name}-${sprite}`}\n            src={pokemon.sprites[`${sprite}`]}\n            alt={`${pokemon.name} ${sprite}`}\n          />\n        ) : null\n      )}\n      <StatsList>\n        <Stat>\n          <StatTitle>HP:</StatTitle> {pokemon.hp}\n        </Stat>\n        <Stat>\n          <StatTitle>Types:</StatTitle> {pokemon.types.join(\" and \")}\n        </Stat>\n        <Stat>\n          <StatTitle>Moves:</StatTitle>{\" \"}\n          {pokemon.moves && pokemon.moves.join(\", \")}\n        </Stat>\n      </StatsList>\n    </article>\n  );\n\n  return (\n    <main>\n      <section style={{ display: \"flex\", width: \"100%\", padding: \"50px\" }}>\n        <aside\n          style={{\n            display: \"block\",\n            minWidth: \"300px\",\n            paddingRight: \"20px\",\n            lineHeight: \"1.4\",\n          }}\n        >\n          <div\n            style={{\n              position: \"sticky\",\n              width: \"280px\",\n              maxHeight: \"calc(100vh - 140px)\",\n              overflow: \"scroll\",\n              top: \"0px\",\n            }}\n          >\n            <StatCard pokemon={currentMon} />\n          </div>\n        </aside>\n        <section>\n          {allPokemon.map((pokemon) => {\n            return (\n              <button\n                key={`${pokemon.name}`}\n                onClick={() => setCurrentMon(pokemon)}\n              >\n                <img src={pokemon.sprites.front_default} alt={pokemon.name} />\n              </button>\n            );\n          })}\n        </section>\n      </section>\n    </main>\n  );\n};\n\nexport default Pokedex;\n","import React, {useState} from \"react\";\n\nconst BattleZone = ({ allPokemon }) => {\n  const [pokemon1, setPokemon1] = useState(allPokemon[0]);\n  const [pokemon2, setPokemon2] = useState(allPokemon[0]);\n\n  function getPokemon(name) {\n    return allPokemon.find((pokemon) => pokemon.name === name);\n  }\n\n  function getRandomMove(moves) {\n    return moves[Math.floor(Math.random() * moves.length)];\n  }\n\n  function battle(e) {\n    e.preventDefault();\n    const player1Move = getRandomMove(pokemon1.moves);\n    const player2Move = getRandomMove(pokemon2.moves);\n    alert(`TIME TO BATTLE, ${pokemon1.name} and ${pokemon2.name}!!!`);\n    alert(`First up, ${pokemon1.name} uses ${player1Move}`);\n    alert(`Next up, ${pokemon2.name} uses ${player2Move}`);\n  }\n\n  const Player = ({playerId, onChange}) => (\n    <select onChange={onChange}>\n      {allPokemon.map((pokemon) => (\n        <option key={`${pokemon.id}-${playerId}`} value={`${pokemon.name}`}>\n          {pokemon.name}\n        </option>\n      ))}\n      </select>\n  );\n\n  return (\n    <main>\n      <h1>Ketchum</h1>\n      <div>\n        <h2>Battle Zone!</h2>\n        <form>\n          <Player playerId=\"1\" onChange={(e) => setPokemon1(getPokemon(e.target.value))} />\n          VS{\" \"}\n          <Player playerId=\"2\" onChange={(e) => setPokemon2(getPokemon(e.target.value))}/>\n          <button onClick={battle}>BATTLE!</button>\n        </form>\n      </div>\n    </main>\n  );\n};\n\nexport default BattleZone;\n","import styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  max-width: 800px;\n  margin: 20px auto;\n  text-align: center;\n  position: relative;\n`;\n\nexport const ScoreBord = styled.div`\n  display: block;\n  position: absolute;\n  right: 0;\n  font-family: \"Bungee\", cursive;\n  font-size: 20px;\n`;\n\nexport const Pokemon = styled.img`\n  display: block;\n  width: 400px;\n  margin: 0 auto;\n`;\n\nexport const AnswerBox = styled.input`\n  display: block;\n  padding: 10px 30px;\n  border: 1px solid #33333;\n  margin: 0 auto;\n  text-align: center;\n\n  ${(props) => {\n    switch (props.valid) {\n      case false:\n        return css`\n          border: 5px solid red;\n        `;\n    }\n  }}\n`;\n\nexport const Button = styled.button`\n  margin: 4px;\n  background-color: #333333;\n  color: white;\n  border-radius: 4px;\n  padding: 10px 20px;\n  border: 0;\n  transition: 0.2s ease;\n  font-weight: 700;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n\n  &:hover,\n  &:focus {\n    background: #555555;\n  }\n\n  &:disabled {\n    background: #777777;\n  }\n`;\n","export function shuffleArray(array) {\n  return array.sort(() => Math.random() - 0.5);\n}\n\nexport function cleanString(string) {\n  return string.replace(/-/g, \" \");\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Container,\n  ScoreBord,\n  Pokemon,\n  AnswerBox,\n  Button,\n} from \"../styles/whosThatPokemon\";\nimport { shuffleArray, cleanString } from \"./utils\";\n\nconst WhosThatPokemon = ({ allPokemon }) => {\n  const [pokemon, setPokemon] = useState(getPokemon());\n  let pokemonName = cleanString(pokemon.name);\n  const [score, setScore] = useState(0);\n  const [showHint, setShowHint] = useState(false);\n  const [wrongGuesses, setWrongGuesses] = useState([]);\n  const [wrongGuessCount, setWrongGuessCount] = useState(0);\n  const [formValid, setFormValid] = useState(true);\n  const [hintArray, setHintArray] = useState(\n    shuffleArray([pokemonName, getPokemonName(), getPokemonName()])\n  );\n  const input = useRef();\n  const dialog = useRef();\n\n  useEffect(() => {\n    let storedScore = 0;\n    if (typeof window !== `undefined`) {\n      storedScore = parseInt(localStorage.getItem(\"pokeScore\")) || 0;\n    }\n\n    setScore(storedScore);\n  }, []);\n\n  function resetStage() {\n    input.current.value = '';\n    const newPokemon = getPokemon();\n    setPokemon(newPokemon);\n    pokemonName = cleanString(newPokemon.name);\n    setFormValid(true);\n    setWrongGuessCount(0);\n    setShowHint(false);\n    setHintArray(\n      shuffleArray([pokemonName, getPokemonName(), getPokemonName()])\n    );\n    setWrongGuesses([]);\n  }\n\n  function getPokemon() {\n    const randPokemon =\n      allPokemon[Math.floor(Math.random() * allPokemon.length)];\n\n    if (!randPokemon?.sprites?.front_default) {\n      return getPokemon();\n    } else {\n      return randPokemon;\n    }\n  }\n\n  function getPokemonName() {\n    const randPokemon = getPokemon();\n    return cleanString(randPokemon.name);\n  }\n\n  function handleWin() {\n    dialog.current.showModal();\n    const newScore = score + 1;\n    if (typeof window !== `undefined`) {\n      localStorage.setItem(\"pokeScore\", newScore);\n    }\n    setScore(newScore);\n  }\n\n  function checkStringMatches(string) {\n    const length = string.length;\n    return string.toLowerCase() === pokemonName.substring(0, length);\n  }\n\n  function checkAnswer(answer) {\n    if (checkStringMatches(answer)) {\n      handleWin();\n    } else {\n      setWrongGuesses([...wrongGuesses, answer]);\n    }\n  }\n\n  function handleChange(e) {\n    e.preventDefault();\n    const answer = e.target.value;\n    const matches = checkStringMatches(answer);\n    setFormValid(answer.length === 0 || matches);\n\n    if (!matches) {\n      const count = wrongGuessCount + 1;\n      setWrongGuessCount(count);\n    }\n\n    if (matches && answer.length === pokemonName.length) {\n      handleWin();\n      e.target.value = \"\";\n    }\n  }\n\n  return (\n    <Container>\n      <dialog ref={dialog}>\n        <h2>You got it!</h2>\n        <img src={pokemon.sprites.front_default} alt={pokemonName} />\n        <p>\n          {`The pokemon is ${pokemonName}, a ${pokemon.types.join(\n            \" and \"\n          )} type!`}\n        </p>\n        <form method=\"dialog\">\n          <Button onClick={() => resetStage()}>OK</Button>\n        </form>\n      </dialog>\n      <ScoreBord>Score: {score}</ScoreBord>\n      <Pokemon src={pokemon.sprites.front_default} alt={pokemonName} />\n      <AnswerBox\n        ref={input}\n        type=\"text\"\n        onChange={(e) => handleChange(e)}\n        valid={formValid}\n        placeholder=\"Who's that pokemon?\"\n      />\n      {wrongGuessCount > 2 && !showHint && (\n        <Button onClick={() => setShowHint(true)}>Gimme a hint</Button>\n      )}\n      {showHint &&\n        hintArray.map((hint) => (\n          <Button\n            key={hint}\n            onClick={() => checkAnswer(hint)}\n            disabled={wrongGuesses.includes(hint)}\n          >\n            {hint}\n          </Button>\n        ))}\n    </Container>\n  );\n};\n\nexport default WhosThatPokemon;\n","import React, { useState } from \"react\";\n\nconst Novel = ({ allPokemon }) => {\n  return (\n    <main>\n      <h1>Simon's Novel</h1>\n      <h2>Chapter name</h2>\n      <p>Paragraph for the novel</p>\n      <hr />\n    </main>\n  );\n};\n\nexport default Novel;\n","import styled from 'styled-components'\nimport { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n    body {\n        font-family: 'Lato', sans-serif;\n    }\n\n    h1, h2, h3 {\n        font-family: 'Bungee', cursive; \n    }\n`;\n\n\nexport const Nav = styled.nav`\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n    padding: 20px 40px;\n    border-bottom: 2px solid #333333;\n`\n\nexport const Heading = styled.h1`\n    user-select: none;\n`\n\nexport const NavLink = styled.li`\n    display: inline;\n`\n\nexport const NavButton = styled.button`\n    margin: 4px;\n    background-color: #333333;\n    color: white;\n    border-radius: 4px;\n    padding: 10px 20px;\n    border: 0;\n    transition: 0.2s ease;\n    font-weight: 700;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    \n    &:hover, &:focus {\n        background: red;\n    }\n`","import React, { useState } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Pokedex from \"../components/Pokedex\";\nimport BattleZone from \"../components/BattleZone\";\nimport WhosThatPokemon from \"../components/WhosThatPokemon\";\nimport Novel from \"../components/Novel\";\n\nimport {\n  GlobalStyles,\n  Heading,\n  Nav,\n  NavLink,\n  NavButton,\n} from \"../styles/index\";\n\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allPokemon {\n        nodes {\n          id\n          name\n          sprites {\n            front_default\n            front_female\n            front_shiny\n            front_shiny_female\n          }\n          types {\n            type {\n              name\n            }\n          }\n          moves {\n            move {\n              name\n            }\n          }\n          stats {\n            base_stat\n            stat {\n              name\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const allPokemon = data.allPokemon.nodes.map((node) => {\n    const { id, name, sprites, types, moves, stats } = node;\n    return {\n      name,\n      id,\n      sprites: sprites,\n      types: types.map((type) => type.type.name),\n      moves: moves.map((move) => move.move.name),\n      hp: stats.filter((stat) => stat.stat.name === \"hp\")[0].base_stat,\n    };\n  });\n\n  const [view, setView] = useState(\"battle\");\n\n  const Body = () => (\n    <main>\n      {view === \"pokedex\" && <Pokedex allPokemon={allPokemon} />}\n      {view === \"battle\" && <BattleZone allPokemon={allPokemon} />}\n      {view === \"guess\" && <WhosThatPokemon allPokemon={allPokemon} />}\n      {view === \"novel\" && <Novel allPokemon={allPokemon} />}\n    </main>\n  );\n\n  return (\n    <>\n      <GlobalStyles />\n      <Nav>\n        <Heading>Ketchum</Heading>\n        <ul>\n          <NavLink>\n            <NavButton onClick={() => setView(\"pokedex\")}>Pokedex</NavButton>\n          </NavLink>\n          <NavLink>\n            <NavButton onClick={() => setView(\"guess\")}>\n              Who's That Pokemon\n            </NavButton>\n          </NavLink>\n          <NavLink>\n            <NavButton onClick={() => setView(\"battle\")}>Battle Zone</NavButton>\n          </NavLink>\n          <NavLink>\n            <NavButton onClick={() => setView(\"novel\")}>Novel</NavButton>\n          </NavLink>\n        </ul>\n      </Nav>\n      <main>\n        <Body />\n      </main>\n    </>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head = () => <title>Pokemon</title>;\n"],"names":["PokemonName","styled","StatsList","Stat","StatTitle","allPokemon","spriteNames","useState","currentMon","setCurrentMon","StatCard","pokemon","key","id","name","map","sprite","sprites","src","alt","hp","types","join","moves","style","display","width","padding","minWidth","paddingRight","lineHeight","position","maxHeight","overflow","top","onClick","front_default","pokemon1","setPokemon1","pokemon2","setPokemon2","getPokemon","find","getRandomMove","Math","floor","random","length","Player","playerId","onChange","value","e","target","preventDefault","player1Move","player2Move","alert","Container","ScoreBord","Pokemon","AnswerBox","props","valid","css","Button","shuffleArray","array","sort","cleanString","string","replace","setPokemon","pokemonName","score","setScore","showHint","setShowHint","wrongGuesses","setWrongGuesses","wrongGuessCount","setWrongGuessCount","formValid","setFormValid","getPokemonName","hintArray","setHintArray","input","useRef","dialog","randPokemon","handleWin","current","showModal","newScore","window","localStorage","setItem","checkStringMatches","toLowerCase","substring","useEffect","storedScore","parseInt","getItem","ref","method","newPokemon","resetStage","type","answer","matches","handleChange","placeholder","hint","disabled","includes","GlobalStyles","createGlobalStyle","Nav","Heading","NavLink","NavButton","useStaticQuery","nodes","node","stats","move","filter","stat","base_stat","view","setView","Body","Head"],"sourceRoot":""}